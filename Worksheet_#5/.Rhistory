library(rvest)
library(polite)
library(dplyr)
library(httr)
library(rvest)
library(polite)
library(dplyr)
library(httr)
polite::use_manners(save_as = "polite_scrape.R")
proj_get()
proj_get()
polite::use_manners(save_as = "polite_scrape.R")
polite::use_manners(save_as = "polite_scrape_tvshows.R")
library(rvest)
library(polite)
library(dplyr)
library(httr)
library(stringr)
polite::use_manners(save_as = "polite_scrape_tvshows.R")
url <- "https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250"
session <- bow(url, user_agent = "Educational")
session
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
class(title_lists)
title_List <- as.data.frame(title_lists[2:51])
title_List
colnames(title_List) <- "ranks"
split_df <- strsplit(as.character(title_List$ranks),".",fixed = TRUE)
split_df <- data.frame(do.call(rbind,split_df))
split_df <- split_df[-c(3:4)]
colnames(split_df) <- c("Ranks","Title")
str(split_df)
class(split_df)
split_df
rating <- scrape(session) %>% html_nodes("span.ipc-rating-star--rating") %>% html_text
tv_rating <- as.data.frame(rating [1:50])
tv_rating
tv_votes <- scrape(session) %>% html_nodes("span.ipc-rating-star--voteCount") %>% html_text
total_tv_votes <- as.data.frame(tv_votes[1:50])
total_tv_votes
episodes <- scrape(session) %>% html_nodes("span.sc-5bc66c50-6.OOdsw") %>% html_text
cl_episodes <- gsub("\\D", "", episodes)
cleaned_ep <- str_extract(episodes, "\\d+(?=\\s*eps)")
cleaned_ep <- as.numeric(cleaned_ep)
cleaned_ep <- cleaned_ep[!is.na(cleaned_ep)]
cleaned_episodes <- as.data.frame(cleaned_ep[1:25])
cleaned_episodes
tv_years <- scrape(session) %>% html_nodes("span.sc-5bc66c50-6.OOdsw") %>% html_text
clyear <- gsub(".*?(\\d{4}(-\\d{4})?).*", "\\1", tv_years)
yeartv <- str_extract(tv_years, "\\b\\d{4}(-\\d{4})?\\b")
yeartv <- as.numeric(yeartv)
yeartv <- yeartv[!is.na(yeartv)]
tv_year_of_air <- as.data.frame(yeartv[1:25])
tv_year_of_air
final_data <- cbind(split_df,tv_rating,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "TV Rating", "Number of Votes", "Number of Episodes", "Year Released")
final_data
final_data <- cbind(split_df,tv_rating,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "Title", "TV Rating", "Number of Episodes", "Year Released")
final_data
final_data <- cbind(split_df,tv_rating,total_tv_votes,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "Title", "TV Rating", "Total Number of Votes", "Number of Episodes", "Year Released")
final_data
final_data <- cbind(split_df,tv_rating,total_tv_votes,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "TV Show Title", "Rating", "Number of Votes", "Number of Episodes", "Year Released")
final_data
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
#Title
title_lists <- scrape(session) %>% html_nodes("h.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
final_data <- cbind(split_df,tv_rating,total_tv_votes,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "TV Show Title", "Rating", "Number of People Voted", "Number of Episodes", "Year Released")
final_data
review <- scrape(session) %>% html_nodes("div.tturv-total-reviews") %>% html_text
u_review <- as.data.frame(review [1:50])
u_review
review <- scrape(session) %>% html_nodes("d.tturv-total-reviews") %>% html_text
u_review <- as.data.frame(review [1:50])
u_review
review <- html_text(html_nodes(scrape(session), "div.tturv-total-reviews"))
u_review <- as.data.frame(review [1:50])
u_review
review <- html_text(html_nodes(scrape(session), "div.tturv-total-reviews"))
review <- review[-2]
u_review
test <- scrape(session)
review <- html_text(html_nodes(test, "div.tturv-total-reviews"))
review <- review[-2]
review
test <- scrape(session)
review <- html_text("div.tturv-total-reviews")
test <- scrape(session)
review <- html_text(test, "div.tturv-total-reviews")
test <- scrape(session)
review <- html_nodes(test, "div.tturv-total-reviews") %>% html_text()
review
test <- scrape(session)
review <- html_nodes(test, "div.tturv-total-reviews") %>% html_text
review
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text
review
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text
reviews <- as.data.frame(review[1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review[!is.na(review)])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review[1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div class=sc-4ba6f725-1 ixFJbG") %>% html_text(trim = TRUE)
test <- scrape(session)
review <- test %>% html_nodes("div.class=sc-4ba6f725-1 ixFJbG") %>% html_text(trim = TRUE)
test <- scrape(session)
review <- test %>% html_nodes("div.sc-4ba6f725-1 ixFJbG") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review[1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.sc-4ba6f725-1 ixFJbG") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.sc-4ba6f725-1") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.sc-4ba6f725-1") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("d.tturv-total-reviews") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.tturv-total-reviews") %>% html_text(trim = TRUE)
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes(".tturv-total-reviews") %>% html_text
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes(".tturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
library(rvest)
library(polite)
library(dplyr)
library(httr)
library(stringr)
polite::use_manners(save_as = "polite_scrape_tvshows.R")
url <- "https://www.imdb.com/chart/toptv/?ref_=nv_tvv_250"
session <- bow(url, user_agent = "Educational")
session
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
class(title_lists)
title_List <- as.data.frame(title_lists[2:51])
title_List
colnames(title_List) <- "ranks"
split_df <- strsplit(as.character(title_List$ranks),".",fixed = TRUE)
split_df <- data.frame(do.call(rbind,split_df))
split_df <- split_df[-c(3:4)]
colnames(split_df) <- c("Ranks","Title")
str(split_df)
class(split_df)
split_df
rating <- scrape(session) %>% html_nodes("span.ipc-rating-star--rating") %>% html_text
tv_rating <- as.data.frame(rating [1:50])
tv_rating
tv_votes <- scrape(session) %>% html_nodes("span.ipc-rating-star--voteCount") %>% html_text
total_tv_votes <- as.data.frame(tv_votes[1:50])
total_tv_votes
episodes <- scrape(session) %>% html_nodes("span.sc-5bc66c50-6.OOdsw") %>% html_text
cl_episodes <- gsub("\\D", "", episodes)
cleaned_ep <- str_extract(episodes, "\\d+(?=\\s*eps)")
cleaned_ep <- as.numeric(cleaned_ep)
cleaned_ep <- cleaned_ep[!is.na(cleaned_ep)]
cleaned_episodes <- as.data.frame(cleaned_ep[1:25])
cleaned_episodes
tv_years <- scrape(session) %>% html_nodes("span.sc-5bc66c50-6.OOdsw") %>% html_text
clyear <- gsub(".*?(\\d{4}(-\\d{4})?).*", "\\1", tv_years)
yeartv <- str_extract(tv_years, "\\b\\d{4}(-\\d{4})?\\b")
yeartv <- as.numeric(yeartv)
yeartv <- yeartv[!is.na(yeartv)]
tv_year_of_air <- as.data.frame(yeartv[1:25])
tv_year_of_air
test <- scrape(session)
review <- test %>% html_nodes(".tturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
final_data <- cbind(split_df,tv_rating,total_tv_votes,cleaned_episodes,tv_year_of_air)
colnames(final_data) <- c("Ranks", "TV Show Title", "Rating", "Number of People Voted", "Number of Episodes", "Year Released")
final_data
test <- scrape(session)
review <- test %>% html_nodes("div.data-testidtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.data-test-idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.data-test.idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes("div.idtturv-total-reviews") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text selectorgadget_selected") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
#Title
title_lists <- scrape(session) %>% html_nodes("h3.ipc-title__text") %>% html_text(trim = TRUE)
#filter unwanted
title_lists <- title_lists[!grepl("Recently viewed", title_lists)]
title_lists
test <- scrape(session)
review <- test %>% html_nodes([data-testid="tturv-total-reviews"]) %>% html_text()
test <- scrape(session)
review <- test %>% html_nodes("[data-testid="tturv-total-reviews"]") %>% html_text()
test <- scrape(session)
review <- test %>% html_nodes("[data-testid='tturv-total-reviews']") %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
test <- scrape(session)
review <- test %>% html_nodes('[data-testid="tturv-total-reviews"]') %>% html_text()
reviews <- as.data.frame(review [1:50])
reviews
